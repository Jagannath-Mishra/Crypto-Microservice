-- Set the database and schema names
\set DB_NAME 'crypto_exchange_db'
\set SCHEMA_NAME 'public'

\connect :DB_NAME
-- Lookup Table: database_engine
INSERT INTO public.database_engine(code, value)
VALUES
    ('POSTGRESQL', 'PostgreSQL'),
    ('MYSQL', 'MySQL'),
    ('ORACLE', 'Oracle'),
    ('SQLSERVER', 'SQL Server'),
    ('DB2', 'DB2');

-- Lookup Table: tenant_status
INSERT INTO public.tenant_status(code, value)
VALUES
    ('NEW', 'New'),
    ('ADMIN_EMAIL_VERIFICATION_PENDING', 'Verification of tenant administrator email is pending'),
    ('DB_PROVISIONING_IN_PROGRESS', 'Tenant database provisioning is in progress'),
    ('SUBDOMAIN_URL_PROVISIONING_IN_PROGRESS', 'Tenant-specific subdomain URL provisioning is in progress'),
    ('ES_INDEX_PROVISIONING_IN_PROGRESS', 'Provisioning of tenant-specific elasticsearch index is in progress'),
    ('IFUSION_CONFIGURATION_IN_PROGRESS', 'iFusion configuration for the tenant is in progress'),
    ('ACTIVE', 'Active'),
    ('MARKED_FOR_DELETION', 'Marked for deletion'),
    ('RESTORATION_IN_PROGRESS', 'Restoration of tenant resources is in progress'),
    ('DELETED', 'Deleted');

CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- Table: tenant_database_configuration  this data has to be generated by default -
INSERT INTO public.tenant_database_configuration(id, database_engine_code, host, port, instance_id, name, schema, username, password) VALUES
    (gen_random_uuid(), 'POSTGRESQL', 'localhost', 5432, 'crypto_exchange_db', 'crypto_exchange_db', 'public', 'postgres', 'ga6EaKrPDqMue6RHDXbShg==');

-- Table: tenant_administrator
INSERT INTO public.tenant_administrator(id, email, full_name, phone) VALUES
    (gen_random_uuid(), 'superadmin@yopmail.com', 'super admin', '970-0000-111');

-- Table: tenant
INSERT INTO public.tenant(id, name, platform_subdomain_name, secret, administrator_id, status_code, tenant_database_configuration_id, master, created_by, creation_timestamp, last_modified_by, last_modified_timestamp) VALUES
    ('b5e6b281-6a70-4517-9e65-e27bd972d74b', 'platform', 'platform', 'HAJD2S7KWT7MBO7AH52JSQ6PC6JLGN3KZ5P2LRL4INWHG6WLRV5XD7HPGFA4MVQH', (SELECT id FROM public.tenant_administrator WHERE email = 'superadmin@yopmail.com'), 'ACTIVE', (SELECT id FROM public.tenant_database_configuration WHERE name = 'inno-app-platform-db'), true, 'SYSTEM', (date_part('epoch'::text, timezone('utc'::text, now())) * (1000)::double precision), 'SYSTEM', (date_part('epoch'::text, timezone('utc'::text, now())) * (1000)::double precision));

UPDATE public.tenant set tenant_database_configuration_id = (select id from public.tenant_database_configuration where name='com-test-platform-db')
    WHERE name='platform';

INSERT INTO public.password_policy(
	id, tenant_id, minimum_length, maximum_length, minimum_uppercase_characters, minimum_lowercase_characters, minimum_digits, minimum_special_characters, password_age_in_days)
	VALUES (gen_random_uuid(), 'b5e6b281-6a70-4517-9e65-e27bd972d74b', 6, 9, 1, 1, 1, 1, 45);

-- Table: tenant_asset_type
INSERT INTO public.tenant_asset_type(code,value) VALUES ('PROFILE_PICTURE','Profile Picture'),('LOGO','Logo');

-- Table: settings
INSERT INTO public.settings (id, tenant_id, data) VALUES
    (gen_random_uuid(), 'b5e6b281-6a70-4517-9e65-e27bd972d74b', '{"passwordPolicy":{"minimumLength":9,"maximumLength":64,"minimumUppercaseCharacters":1,"minimumLowercaseCharacters":1,"minimumDigits":1,"minimumSpecialCharacters":1,"passwordAgeInDays":30}}');

-- Lookup Table: tenant_template_types
INSERT INTO public.tenant_template_type(code, value) VALUES
    ('CREATE_TENANT', 'Create tenant template'),
    ('UPDATE_TENANT', 'Update tenant template'),
    ('DELETE_TENANT', 'Delete tenant template'),
    ('INVITE_USER', 'Invite user template');

-- Lookup Table: tenant_template_fields
INSERT INTO public.tenant_template_field(code, value) VALUES
    ('NAME', 'Name of the tenant'),
    ('PLATFORM_SUB_DOMAIN_NAME', 'Platform sub domain of the tenant'),
    ('ADMINISTRATOR_FIRSTNAME', 'Administrator first name'),
    ('ADMINISTRATOR_LASTNAME', 'Administrator last name'),
    ('ADMINISTRATOR_EMAIL', 'Administrator email'),
    ('ADMINISTRATOR_PHONE', 'Administrator phone');

-- Lookup Table: tenant_template
INSERT INTO public.tenant_template(template_type,value,is_admin_template) VALUES ('CREATE_TENANT','Create Tenant',true),
('SUSPEND_TENANT','Suspend Tenant',true),('RESTORE_TENANT','Restore Tenant',true),('INVITE_USER','Invite User',false),
('SUSPEND_USER','Suspend User',false);

--  Lookup Table: template_placeholder
INSERT INTO public.template_placeholder(id, placeholder_value,placeholder_id) VALUES (gen_random_uuid(),'tenantName','CREATE_TENANT'),
(gen_random_uuid(),'superAdminName','CREATE_TENANT'),
(gen_random_uuid(),'adminName','CREATE_TENANT'),
(gen_random_uuid(),'adminEmailId','CREATE_TENANT'),
(gen_random_uuid(),'tenantName','SUSPEND_TENANT'),
(gen_random_uuid(),'superAdminName','SUSPEND_TENANT'),
(gen_random_uuid(),'adminName','SUSPEND_TENANT'),
(gen_random_uuid(),'adminEmailId','SUSPEND_TENANT'),
(gen_random_uuid(),'reason','SUSPEND_TENANT'),
(gen_random_uuid(),'tenantName','RESTORE_TENANT'),
(gen_random_uuid(),'superAdminName','RESTORE_TENANT'),
(gen_random_uuid(),'adminName','RESTORE_TENANT'),
(gen_random_uuid(),'adminEmailId','RESTORE_TENANT'),
(gen_random_uuid(),'reason','RESTORE_TENANT'),
(gen_random_uuid(),'tenantName','INVITE_USER'),
(gen_random_uuid(),'userName','INVITE_USER'),
(gen_random_uuid(),'emailId','INVITE_USER'),
(gen_random_uuid(),'roles','INVITE_USER'),
(gen_random_uuid(),'tenantName','SUSPEND_USER'),
(gen_random_uuid(),'userName','SUSPEND_USER'),
(gen_random_uuid(),'emailId','SUSPEND_USER'),
(gen_random_uuid(),'roles','SUSPEND_USER');